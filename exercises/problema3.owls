func emptymatrix(row : nat, col : nat) : [[real]] {
	return array(array (0.0, col), row);
}

func readmatrix(row : nat, col : nat) : [[real]] {
	m : [[real]] = emptymatrix(row, col);
	for(i : nat = 0; i < row; i = i + 1) {
		r : [real] = array(0.0, row);
		for (j : nat = 0; j < col; j = j + 1) {
			write ("Insira a célula (");
			write (i);
			write (",");
			write (j);
			write ("):\n");
			m[i][j] = readNat();
		}
	}
	return m;
}

main() {
	
	write("Insira a quantidade de linhas da matriz A:\n");
	rowA : nat = readNat();
	write("Insira a quantidade de colunas da matriz A:\n");
	colA : nat = readNat();

	write("Insira a quantidade de linhas da matriz B:\n");
	rowB : nat = readNat();
	write("Insira a quantidade de colunas da matriz B:\n");
	colB : nat = readNat();

	if (colA <= 0 || colB <= 0 || rowA <= 0 || rowB <= 0) {
		write ("Não é possível fazer a multiplicação com valores inválidos.\n");
		return 0;
	}

	if (colA != rowB) {
		write ("Não é possível fazer a multiplicação.\n");
		return 0;
	}

	write("Insira os elementos da matriz A:\n");
	A : [[real]] = readmatrix(rowA, colA);

	write("Insira os elementos da matriz B:\n");
	B : [[real]] = readmatrix(rowB, colB);

	write("O resultado da multiplicação é:\n");

	M : [[real]] = emptymatrix(rowA, colB);
	for(i : nat = 0; i < rowA; i = i + 1) {
		for (j : nat = 0; j < colB; j = j + 1) {
			for (k : nat = 0; k < rowB; k = k + 1) {
				M[i][j] = M[i][j] + A[i][k] * B[k][j];
			}
			write(M[i][j]);
			write(' ');
		}
		write('\n');
	}
	return 0;
}