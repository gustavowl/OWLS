struct rational_t {
    numerador : int;
    denominador : int;
}

func construtor(numerador : int, denominador : int) : rational_t {   
    novo : rational_t;
    novo.numerador = numerador;
    novo.denominador = denominador;
    return novo;
}

func compara(fracao_1 : rational_t, fracao_2 : rational_t) : bool {   
    if(fracao_1.numerador == fracao_2.numerador && fracao_1.denominador == fracao_2.denominador){
        return true;
    }
    return false;
}

func negacao(fracao_1 : rational_t) : rational_t {   
    fracao_1.numerador = -fracao_1.numerador;
    return fracao_1;
}

func inverso(fracao_1 : rational_t) : rational_t {   
    aux : int;
    aux = fracao_1.numerador;
    fracao_1.numerador = fracao_1.denominador;
    fracao_1.denominador = aux;
    return fracao_1;
}

func multiplicacao(fracao_1 : rational_t, fracao_2 : rational_t) : rational_t {   
    aux : rational_t;
    aux.numerador = fracao_1.numerador * fracao_2.numerador;
    aux.denominador = fracao_1.denominador * fracao_2.denominador;
    return aux;
}

func divisao(fracao_1 : rational_t, fracao_2 : rational_t) : rational_t {   
    aux : rational_t;
    aux.numerador = fracao_1.numerador * fracao_2.denominador;
    aux.denominador = fracao_1.denominador * fracao_2.numerador;
    return aux;
}

func soma(fracao_1 : rational_t, fracao_2 : rational_t) : rational_t {   
    resultado : rational_t;
    auxMmc : int = floor(mmc(fracao_1.denominador, fracao_2.denominador));
    aux : int;
    aux  = floor(auxMmc/fracao_1.denominador);
    fracao_1.numerador = fracao_1.numerador * aux;

    aux  = floor(auxMmc/fracao_2.denominador);
    fracao_2.numerador = fracao_2.numerador * aux;

    resultado.denominador = auxMmc;
    resultado.numerador = fracao_1.numerador + fracao_2.numerador;
    
    return resultado;
}

func subtracao(fracao_1 : rational_t, fracao_2 : rational_t) : rational_t {   
    resultado : rational_t;
    auxMmc : int = floor(mmc(fracao_1.denominador, fracao_2.denominador));
    aux : int;
    write("DEBUG");
    aux  = floor(auxMmc/fracao_1.denominador);
    fracao_1.numerador = fracao_1.numerador * aux;

    aux  = floor(auxMmc/fracao_2.denominador);
    fracao_2.numerador = fracao_2.numerador * aux;

    resultado.denominador = auxMmc;
    resultado.numerador = fracao_1.numerador - fracao_2.numerador;
    
    return resultado;
}


func mdc(a : real, b : real) : real{
        
    if(b == 0){
    	return a;
    }
    
    return mdc(b,a%b);
}

func mmc(a : real, b : real) : real{
    div : real;
    if(b == 0){
    	return a;
    }
    else{
    	div = (a*b)/(mdc(a,b));
    }
    return div;
}

main() {
    numerador : int;
    denominador : int;

    fracao_1 : rational_t;
    fracao_2 : rational_t;
   
    write("Preencha informações so bre o primeiro número racional (racional A):\n");
    write ("Digite o numerador: \n");
    numerador = readInt();

    write ("Digite o denominador: \n");
    denominador = readInt();

    if(denominador == 0){
    	write("Entrada inválida. ");
    	return 0;
    }

    fracao_1 = construtor(numerador, denominador);

    write("Preencha informações sobre o segundo número racional (racional B):\n");
    write ("Digite o numerador: \n");
    numerador = readInt();

    write ("Digite o denominador: \n");
    denominador = readInt();

    if(denominador == 0){
        write("Entrada inválida. ");
        return 0;
    }

    fracao_2 = construtor(numerador, denominador);

    if(compara(fracao_1,fracao_2)){
        write("Os racionais são iguais\n");
    }else {
        write ("Os numeros racionais sao diferentes!\n");
    }

    aux : rational_t;

    write ("-- Negação do racional A: --\n");
    aux = negacao(fracao_1);
    write ("Numerador == ");
    write (aux.numerador);
    write ("\nDenominador == ");
    write (aux.denominador);
    write("\n");

    write ("-- Negação do racional B: --\n");
    aux = negacao(fracao_2);
    write ("Numerador == ");
    write (aux.numerador);
    write ("\nDenominador == ");
    write (aux.denominador);
    write("\n\n");

    write ("-- Inverso do racional A: --\n");
    aux = inverso(fracao_1);
    write ("Numerador == ");
    write (aux.numerador);
    write ("\nDenominador == ");
    write (aux.denominador);
    write("\n");

    write ("-- Inverso do racional B: --\n");
    aux = inverso(fracao_2);
    write ("Numerador == ");
    write (aux.numerador);
    write ("\nDenominador == ");
    write (aux.denominador);
    write("\n\n");


    write ("-- Multiplicação dos racional A*B: --\n");
    aux = multiplicacao(fracao_1, fracao_2);
    write ("Numerador == ");
    write (aux.numerador);
    write ("\nDenominador == ");
    write (aux.denominador);
    write("\n");

    write ("-- Multiplicação dos racional B*A: --\n");
    aux = multiplicacao(fracao_2, fracao_1);
    write ("Numerador == ");
    write (aux.numerador);
    write ("\nDenominador == ");
    write (aux.denominador);
    write("\n\n");

    write ("-- Divisão dos racional A*B: --\n");
    aux = divisao(fracao_1, fracao_2);
    write ("Numerador == ");
    write (aux.numerador);
    write ("\nDenominador == ");
    write (aux.denominador);
    write("\n");

    write ("-- Divisão dos racional B*A: --\n");
    aux = divisao(fracao_2, fracao_1);
    write ("Numerador == ");
    write (aux.numerador);
    write ("\nDenominador == ");
    write (aux.denominador);
    write("\n\n");

    write ("-- Soma dos racional A+B: --\n");
    aux = soma(fracao_1, fracao_2);
    write ("Numerador == ");
    write (aux.numerador);
    write ("\nDenominador == ");
    write (aux.denominador);
    write("\n");

    write ("-- Soma dos racional B+A: --\n");
    aux = soma(fracao_2, fracao_1);
    write ("Numerador == ");
    write (aux.numerador);
    write ("\nDenominador == ");
    write (aux.denominador);
    write("\n\n");

    write ("-- Subtração dos racional A+B: --\n");
    aux = subtracao(fracao_1, fracao_2);
    write ("Numerador == ");
    write (aux.numerador);
    write ("\nDenominador == ");
    write (aux.denominador);
    write("\n");

    write ("-- Subtração dos racional B+A: --\n");
    aux = subtracao(fracao_2, fracao_1);
    write ("Numerador == ");
    write (aux.numerador);
    write ("\nDenominador == ");
    write (aux.denominador);
    
    write("\n");
    return 0;
}